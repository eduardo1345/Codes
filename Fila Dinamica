#include <stdio.h>
#include <stdlib.h>

typedef struct {
    int chave;
    /* outros componentes */
} Item;

typedef struct NoFila *Ponteiro;

typedef struct NoFila{
    Item item;
    Ponteiro proximo;
} NoFila;

typedef struct {
    Ponteiro inicio;
    Ponteiro fim;
    int tamanho;
} FilaDinamica;

void iniciaFila(FilaDinamica *fila){
    fila->inicio=NULL;
    fila->fim=NULL;
    fila->tamanho=0;
}
int estaVazia(FilaDinamica *fila){
    return(fila->tamanho==0);
}

void enfileira(Item x, FilaDinamica *fila){
    Ponteiro aux=NULL;
    aux =malloc(sizeof(NoFila));
    if(estaVazia(fila)){
        fila->inicio=fila->fim=aux;
        aux->proximo=NULL;
    }
    else{
        aux->proximo=NULL;
        fila->fim->proximo=aux;
        fila->fim=fila->fim->proximo;
    }
    fila->tamanho ++;
}
void desenfileira(FilaDinamica *fila, Item *x){
    Ponteiro aux=NULL;
    aux=malloc(sizeof(NoFila));
    if(estaVazia(fila)){
        aux=fila->inicio;
        x=aux.x;
        fila->inicio=fila->inicio->proximo;
        free(aux);
        fila->tamanho--;
        return(x);
    }
}
void imprimeFila(FilaDinamica *fila){
    for(int i=0;i<fila->tamanho;i++){
        printf("%i \n",fila->tamanho);
    }
}
int tamanhoFila(FilaDinamica *fila);
Item fimFila(FilaDinamica *fila);

int main(){
    

    return 0;
}
