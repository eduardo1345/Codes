#include <stdio.h>
#include <stdlib.h>

typedef struct {
    int chave;
}Item;
typedef struct NoLista *ponteiro;

typedef struct NoLista {
    Item elemento;
    ponteiro prox;
}NoLista;

typedef struct {
    ponteiro inicio;
    int tamanho;
}Lista;

void inicia(Lista *lista){
    lista->inicio=NULL;
    lista->tamanho=0;
}
void iserir(Lista *lista, int x){
    ponteiro aux;
    aux=malloc(sizeof(NoLista));
    ponteiro novo;
    novo=malloc(sizeof(NoLista));
    aux->elemento.chave= x;
    if(lista->inicio == NULL || x < lista->inicio->elemento.chave) {
        aux->prox=lista->inicio;
        lista->inicio=NULL;
        }
    else{
        novo=lista->inicio;
    }
    while(novo->prox != NULL & x > novo->prox.chave){
        novo=novo->prox;
        aux->prox=novo->prox;
        novo->prox=aux;
        ++;
    }
    }

void destroyLIST(Lista *lista){

}
int search(Lista *lista,int x){
    ponteiro aux;
    for(aux= lista->inicio;aux != NULL;aux++){
        if(aux->x == x){
            return 1;
        }
    }
}

void imprimir(Lista *lista){

}
int main() {

    return 0;
}
