#include <stdio.h>
#include <stdlib.h>

typedef struct {
    int chave;
}Item;
typedef struct NoLista *ponteiro;

typedef struct NoLista {
    Item elemento;
    ponteiro prox;
}NoLista;

typedef struct {
    ponteiro inicio;
    int tamanho;
}Lista;

void inicia(Lista *lista){
    lista->inicio=NULL;
    lista->tamanho=0;
}
void iserir(Lista *lista, int x){
    ponteiro aux;
    aux=malloc(sizeof(NoLista));//para um novo elemento
    ponteiro novo;
    novo=malloc(sizeof(NoLista));//para percorrer a lista
    aux->elemento.chave= x;
    if(lista->inicio == NULL || x < lista->inicio->elemento.chave) {
        aux->prox=lista->inicio;
        lista->inicio=aux;
        }
    else {
        novo = lista->inicio;
        while (novo->prox != NULL & x > novo->prox->elemento.chave) {
            novo = novo->prox;
            aux->prox = novo->prox;
            novo->prox = aux;
            novo->prox++;
        }
    }
}

void destroyLIST(Lista *lista){

}
int search(Lista *lista,int x){
    ponteiro aux=malloc(sizeof(NoLista));
    if(lista->tamanho == 0){
        return 0;
   }
    aux=lista->inicio;
    while(aux != NULL && x > aux->x){
        aux=aux->prox;
        if(aux == NULL || aux->x > x){
            return  0;
        }
        return 1;
    }
}

void imprimir(Lista *lista){

}
int main() {
    NoLista p;
    iserir(&p,21);
    return 0;
}
