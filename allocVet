#include<stdio.h>
#include<stdlib.h>
/*
1) - Pergunte ao usuário o tamanho de um vetor a ser alocado;
- Aloque dinamicamente este vetor;
- Preencha este vetor com inteiros (usuário insere valor);
- Exiba a média do vetor.
2) - Pergunte ao usuário o tamanho de linhas e de colunas de uma matriz;
- Aloque dinamicamente essa matriz;
- Faça o usuário preencher a matriz com inteiros;
- Calcule o determinante da matriz.
3) - Pergunte ao usuário quantos cadastros ele deseja inserir;
- Aloque dinamicamente uma struct com essa quantidade de cadastros contendo: nome; telefone; idade.
- De acordo com o pedido do usuário, de a opção de editar cada uma das posições pré-alocadas;
Ou seja, a posição já foi alocada previamente, o usuário só tem a opção de editar os dados nela contidos.
4) - Faça um programa que aloque dinamicamente duas matrizes;
- Peça ao usuário para preencher a matriz com valores inteiros;
- Realize a multiplicação dessas matrizes e armazene em uma terceira, também alocada dinamicamente;
5) - Faça um programa que aloque, e realoque, conforme o usuário for inserindo, um vetor de números inteiros. O tamanho desse vetor deve crescer, conforme o usuário continuar digitando valores em um certo loop while.
Ao final, exibir quantos desses valores são maiores do que 52;
6) - Faça um programa que aloque dinamicamente um vetor de strings (refletir sobre o que é um vetor de strings);
- O tamanho desse vetor deve ser indagado ao usuário durante a execução do programa, a quantidade de caracteres em cada string é fixa (fica a seu critério).
- Remover o \n de cada uma das strings.
- Preencher essas strings com o nome dos convidados do casamento do Leonardo.

 

1)Alocação dinamicamente de um vetor.

#include <stdio.h>
#include <stdlib.h>



int main(){
     int i, n;
     float *v, media, soma;
     printf("Digite tamanho do vetor:");
     
    scanf("%d", &n);

    v = (float*) malloc(n*sizeof(float));
    for (i = 0; i < n; i++) {
        scanf("%f", &v[i]);
    }
    for ( i = 0; i < n ;i++ ) {
        soma += v[i];
    }
    media = soma/n;
    printf ( "\nSoma total: %.0f\n", soma );
    printf("Media = %.0f\n", media,soma);
   
    free(v);
    
    return 0;
}

2)Alocação de matriz determinante.

#include <stdio.h>
#include <stdlib.h>

double **Alocar_matriz_real (int m, int n){
 
  double **v;  
  int   i;    
 
  v = (double **) calloc (m, sizeof(double *));
 
  for ( i = 0; i < m; i++ ) {
      v[i] = (double*) calloc (n, sizeof(double));
      }
  return (v); 
}

int main(int m, int n, double **v)
{
      float valor;
      int i,j,k,ordem;
      
      int num = ordem;
      float mult,deter=1;
      
      printf("Entre com a ordem da matriz:");
      scanf("%d",&ordem);
      
      for(i=0;i<ordem;i++){
        for(j=0;j<ordem;j++){
            
              printf("Entre com o elemento (%d,%d) da matriz:",i+1,j+1);
              scanf("%f",&v[i][j]);
        }
      }    
      for(i=0;i<num;i++)
      {
        for(j=0;j<num;j++)
        {
              mult=v[j][i]/v[i][i];
              for(k=0;k<fdr;k++)
             {
                if(i==j) break;
                v[j][k]=v[j][k]-v[i][k]*mult;
              }
        }
      }
      for(i=0;i<num;i++)
      {
        deter=deter*v[i][i];
      }
      
      printf("O valor da determinante: %.0f \n",deter);
      
      free (v); 
      return 0;
}
3) - Pergunte ao usuário quantos cadastros ele deseja inserir;
- Aloque dinamicamente uma struct com essa quantidade de cadastros contendo: nome; telefone; idade.
- De acordo com o pedido do usuário, de a opção de editar cada uma das posições pré-alocadas;
Ou seja, a posição já foi alocada previamente, o usuário só tem a opção de editar os dados nela contidos.
 */

#include <stdio.h>
#include <stdlib.h>

struct cadastros{
    char nome[33];
    int telefone;
    int idade
}

typedef struct cadastro cad;

void limparBuf(){
    char c;
    while ((c = getchar()) != '\n' && c != EOF) { }
}
    
void printList(int qtd, cad *full) {
    for (int i = 0; i < qtd; i++){
        printf("(%d,%s) ",full[i].index,full[i].nome);
    }
    printf("\n");
}
int main(){
    
    int op = 1;
    int cads = 0;
    int posicao;
    cad *cadastroTotal = NULL;
    cad temp;

    while(op!=0) {
        printf("Digite a opcao desejada \n");
        printf("1 - Inserir\n");
        printf("2 - Listar\n");
        printf("3 - Editar\n");
        printf("0 - Sair \n");
        scanf("%i", &opcao);
        limparBuf();
        switch (op) {
            case 1:
                ptr = (cad*) malloc(sizeof(cad));
                ptr=temp;
                
                printf("Quantos cadastros deseja Inserir: \n");
                scanf("%d",&cads);
                
                for(int i=0;i<cads;i++){
                    printf("Digite o nome: \n");
                    fgets(temp.nome, sizeof(temp.nome), stdin);
                    temp.nome[strcspn(temp.nome,"\n")]='\0';
                    
                }
                printList(qtd,cadastroTotal);
                break;
            case 2:
                printList(qtd,cadastroTotal);
                break;
            case 3:
                break;
            case 0:
                break;
            default:
                break;
        }
    }
}
